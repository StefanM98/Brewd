@page "/breweries"
@using Brewd.Shared
@using Brewd.Shared.Models
@using Brewd.Client.Services

<PageTitle>🍺 Brewd | Browse All</PageTitle>

<h1>Top Breweries</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (BreweryList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Type</th>
                <th>City</th>
                <th>State</th>
                <th>Country</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var brewery in BreweryList)
            {
                <tr>
                    <td>@brewery.Name</td>
                    <td>@brewery.BreweryType</td>
                    <td>@brewery.City</td>
                    <td>@brewery.State</td>
                    <td>@brewery.Country</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "page")]
    public int? Page { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "per_page")]
    public int? PerPage { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "order")]
    public string? SortOrder { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "sort")]
    public string? SortBy { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "by_type")]
    public string? ByType { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "by_city")]
    public string? ByCity { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "by_state")]
    public string? ByState { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "by_name")]
    public string? ByName { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "by_postal")]
    public string? ByPostal { get; set; }


    public IEnumerable<BreweryModel> BreweryList { get; set; }

    [Inject]
    public IBreweryService BreweryService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        BreweriesRequest req = new BreweriesRequest
        {
            Page = Page,
            PerPage = PerPage,
            SortBy = SortBy,
            ByType = ByType is not null ? Enum.Parse<TypeOfBrewery>(ByType) : null,
            ByCity = ByCity,
            ByState = ByState,
            ByName = ByName,
            ByPostal = ByPostal
        };

        BreweryList = await BreweryService.GetBreweries(req);
    }
}
